{"version":3,"sources":["logic/youtubeRelated.js","logic/storage.js","logic/filter.js","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Nav/Nav.jsx","components/VtuberList/VtuberList.jsx","components/VtuberListItem/VtuberListItem.jsx","components/LiveStreamsView/LiveSteamsView.jsx","components/FavoritesView/FavoritesView.jsx","components/FilterBox/FilterBox.jsx","components/AboutView/AboutView.jsx","components/RankingsView/RankingsView.jsx","components/RandomView/RandomView.jsx","App.js","index.js"],"names":["module","exports","craftChannelUrl","channelId","getFavoritesList","favorites","localStorage","getItem","JSON","parse","error","console","log","setFavoritesList","newFavorites","setItem","stringify","addFavorite","vtuberId","includes","push","removeFavorite","undefined","length","i","indexOf","splice","filterByName","array","filter","filteredArray","vtuber","name","toLowerCase","value","filterByGroup","group","filterByCount","type","comparisonOp","intToParse","parseInt","videoCount","subscriberCount","filterArray","filters","newArray","fLen","filterType","Footer","className","React","Component","Header","Nav","selectView","e","view","props","selectViewProp","selectLanguage","target","onClick","VtuberList","componentDidMount","componentDidUpdate","prevProps","prevState","createVtuberList","vtuberList","listToReturn","favArray","favoritesListProp","map","vtuberDataProp","favoriteVtuberProp","isFavoritedProp","id","key","createVtuberListRow","filterProp","this","filterVtuberProp","youtubeUrls","require","VtuberListItem","setState","favoriteChecked","state","showTwitter","twitter","href","favoriteVtuber","evt","checked","src","thumbnails","medium","url","alt","title","onChange","htmlFor","retired","LiveStreamsView","FavoritesView","makeFavoriteList","favIdArray","showFavoritesList","inputFavorites","inputVtubers","favsToReturn","FilterBox","noNumbersRegex","openCloseFilter","amOpen","addFilter","newFilters","Math","floor","random","removeFilter","filterToRemove","changeFilter","changeFilterValue","f","find","changeFilterVisual","inputToReturn","defaultValue","pattern","showFilters","filterBoxes","closedFilters","RandomView","setRandomCards","getRandomCards","cardsToGet","cardsToReturn","cardsToRng","rng","rnum","getRandomNumber","types","cardArrays","hololive","nijisanji","independent","min","max","showCards","cardsToShow","storage","tempVtuberCollection","App","vtubers","currentlyShownVtubers","favoriteVtubers","currentView","language","onMountSetup","newView","isFavorited","filterVtuberList","filterObj","tempArr","showView","viewToReturn","selectLangProp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fe2cc5b.chunk.js","sourcesContent":["//example playlist url\r\n//https://www.youtube.com/playlist?list=UUp6993wxpyDPHUpavwDFqgg\r\n\r\n//example channel url\r\n//https://www.youtube.com/channel/UCMwGHR0BTZuLsmjY_NT5Pwg\r\n\r\nconst craftChannelUrl=(channelId)=>{\r\n    return \"https://www.youtube.com/channel/\"+channelId;\r\n};\r\n\r\nconst craftUploadedUrl=(playlistId)=>{\r\n    return \"https://www.youtube.com/playlist?list=\"+playlistId;\r\n}\r\n\r\nmodule.exports={\r\n    craftChannelUrl\r\n}","const favoriteListKey = 'favoriteVtuberList';\r\n\r\nconst addFavorite=(vtuberId)=>{\r\n    try {\r\n        let favorites = getFavoritesList();\r\n\r\n        if(!favorites.includes(vtuberId)){\r\n            favorites.push(vtuberId);\r\n        }\r\n        setFavoritesList(favorites);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFavoritesList =()=>{\r\n    let favorites = [];\r\n    try {\r\n        let temp = localStorage.getItem(favoriteListKey);\r\n        if(temp !==null){\r\n            favorites = JSON.parse(localStorage.getItem(favoriteListKey));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return favorites;\r\n}\r\n\r\nconst removeFavorite=(vtuberId)=>{\r\n    try {\r\n        let favorites = getFavoritesList();\r\n\r\n        if(typeof(favorites.length)!==undefined){\r\n            let i = favorites.indexOf(vtuberId);\r\n            if(i>-1){\r\n                favorites.splice(i,1);\r\n            }\r\n\r\n            setFavoritesList(favorites);\r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst setFavoritesList =(newFavorites)=>{\r\n    try {\r\n        localStorage.setItem(favoriteListKey,JSON.stringify(newFavorites));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nmodule.exports={\r\n    addFavorite,getFavoritesList,removeFavorite,setFavoritesList\r\n}","const filterByName = (array, filter) => {\r\n    let filteredArray = [];\r\n    try {\r\n        filteredArray = array.filter(vtuber => vtuber.name.toLowerCase().includes(filter.value.toLowerCase()));\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    if (filteredArray.length !== 0) {\r\n        return filteredArray;\r\n    }\r\n    return array;\r\n\r\n}\r\n\r\nconst filterByGroup = (array, filter) => {\r\n    let filteredArray = [];\r\n    try {\r\n        if(filter.value === \"other\"){\r\n        filteredArray = array.filter(vtuber => vtuber.group !== \"nijisanji\" &&\r\n        vtuber.group !== \"hololive\" && \r\n        vtuber.group !== \"independent\");\r\n\r\n        }else{\r\n            filteredArray = array.filter(vtuber => vtuber.group === filter.value);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return filteredArray;\r\n}\r\n\r\n\r\n//TODO\r\n//Add both of the lower filters\r\nconst filterByCount = (array, filter, type) => {\r\n    console.log(filter);\r\n    let filteredArray = array;\r\n    try {\r\n        if (filter.value === \"\" || filter.comparisonOp === \"\") return array;\r\n        const intToParse = parseInt(filter.value);\r\n        switch (type) {\r\n            case \"videos\":\r\n                if (filter.comparisonOp === \">\") {\r\n                    filteredArray = array.filter(vtuber => vtuber.videoCount >= intToParse);\r\n                } else {\r\n                    filteredArray = array.filter(vtuber => vtuber.videoCount <= intToParse);\r\n                };\r\n                break;\r\n            case \"subs\":\r\n                if (filter.comparisonOp === \">\") {\r\n                    filteredArray = array.filter(vtuber => vtuber.subscriberCount >= intToParse);\r\n                } else {\r\n                    filteredArray = array.filter(vtuber => vtuber.subscriberCount <= intToParse);\r\n                };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(filteredArray);\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return filteredArray;\r\n}\r\n\r\nconst filterArray = (array, filters) => {\r\n    try {\r\n        if (filters.length > 0) {\r\n            let newArray = array;\r\n            for (let i = 0, fLen = filters.length; i < fLen; i++) {\r\n                console.log(filters[i]);\r\n                switch (filters[i].filterType) {\r\n                    case \"name\":\r\n                        newArray = filterByName(newArray, filters[i]);\r\n                        break;\r\n                    case \"subCount\":\r\n                        newArray = filterByCount(newArray, filters[i], \"subs\");\r\n                        break;\r\n                    case \"videoCount\":\r\n                        newArray = filterByCount(newArray, filters[i], \"videos\");\r\n                        break;\r\n                    case \"group\":\r\n                        newArray = filterByGroup(newArray, filters[i]);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            return newArray;\r\n        } else {\r\n            return [];\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    filterArray\r\n}","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    render() {\r\n        return (<div>\r\n            <footer className=\"footerMain\">\r\n                \r\n            </footer>\r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    render() {\r\n        return (<div>\r\n            <header >\r\n                <div className=\"divHeaderImg\"></div>\r\n            </header>\r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nexport default class Nav extends React.Component {\r\n    selectView = (e, view) => {\r\n        try {\r\n            this.props.selectViewProp(view);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    selectLanguage = (e) => {\r\n        try {\r\n\r\n            console.log(e.target.value);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<nav className=\"navMainNavBar\">\r\n            <div className=\"divNavBtnContainer\">\r\n                <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"home\")}>Home</button>\r\n                <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"random\")}>Random</button>\r\n                {/* <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"currentlyLive\")}>Currently Live</button> */}\r\n                <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"favorites\")}>Favorites</button>\r\n                {/* <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"rankings\")}>Rankings</button> */}\r\n                {/* <button className=\"btnWebsiteLinks\" onClick={(e) => this.selectView(e, \"about\")}>About</button> */}\r\n            </div>\r\n        </nav>)\r\n    }\r\n}","import React from \"react\";\r\nimport { VtuberListItem, FilterBox } from \"../index\";\r\nimport \"./VtuberList.css\";\r\n\r\n\r\nexport default class VtuberList extends React.Component {\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n\r\n    }\r\n\r\n    createVtuberList = (vtuberList) => {\r\n        let listToReturn = <div></div>;\r\n        const favArray = this.props.favoritesListProp;\r\n        try {\r\n\r\n            listToReturn = vtuberList.map(vtuber =>\r\n                <VtuberListItem vtuberDataProp={vtuber}\r\n                    favoriteVtuberProp={this.props.favoriteVtuberProp}\r\n                    isFavoritedProp={favArray.includes(vtuber.id)}\r\n                    key={vtuber.id} />\r\n            )\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return listToReturn;\r\n    }\r\n\r\n    createVtuberListRow = () => {\r\n        try {\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"divFilterBoxContainer\"><FilterBox filterProp={this.props.filterVtuberProp}></FilterBox></div>\r\n                <div className=\"divVtuberList\">\r\n                    {this.createVtuberList(this.props.vtuberDataProp)}\r\n                </div>\r\n            </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./VtuberListItem.css\";\r\nconst youtubeUrls = require(\"../../logic/youtubeRelated\");\r\n\r\nexport default class VtuberListItem extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            favoriteChecked: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        try {\r\n            this.setState({\r\n                favoriteChecked: this.props.isFavoritedProp\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (prevState.favoriteChecked !== this.state.favoriteChecked) {\r\n            this.props.favoriteVtuberProp(this.props.vtuberDataProp.id, this.state.favoriteChecked);\r\n        }\r\n    }\r\n\r\n    // selectVtuber = () => {\r\n    //     // console.log(this.props.vtuberDataProp);\r\n    // }\r\n\r\n    showTwitter=(vtuber)=>{\r\n        if(vtuber.twitter!==\"\"){\r\n           return <span><strong>Twitter:</strong><a href={vtuber.twitter}>{vtuber.twitter}</a></span>;\r\n\r\n        }\r\n    }\r\n\r\n    favoriteVtuber = (evt) => {\r\n        try {\r\n            this.setState({ favoriteChecked: evt.target.checked });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const vtuber = this.props.vtuberDataProp;\r\n        return (<span className=\"divVtuberListItem\">\r\n            <div className=\"divCardMain\">\r\n                <img src={vtuber.thumbnails.medium.url} alt=\"It seems that this thumbnail could not be gotten\" className=\"cardVtuberImage\" />\r\n                <div className=\"divTitle\"><strong>Name:</strong>{vtuber.name}</div>\r\n                <div className=\"divVtuberCardBody\">\r\n                    <span><strong>Group:</strong>{vtuber.group}</span>\r\n                    <span className=\"divChannelLink\"><strong>Channel:</strong>\r\n                        <a href={youtubeUrls.craftChannelUrl(vtuber.id)}>{vtuber.title}</a>\r\n                    </span>\r\n                    {this.showTwitter(vtuber)}\r\n                    <span><strong>Subscriber count:</strong>{vtuber.subscriberCount}</span>\r\n                    <span><strong>Video count:</strong>{vtuber.videoCount}</span>\r\n                    <span className=\"spanFavoriteCheckBox\">\r\n                        <form>\r\n                            <input type=\"checkbox\" id=\"checkboxFavorite\" onChange={this.favoriteVtuber} checked={this.state.favoriteChecked} />\r\n                            <label htmlFor=\"checkboxFavorite\">Favorite</label>\r\n                        </form>\r\n                    </span>\r\n                    {vtuber.retired && (<span><strong>(retired)</strong></span>)}\r\n                </div>\r\n            </div>\r\n        </span>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./LiveStreamsView.css\";\r\n\r\nexport default class LiveStreamsView extends React.Component{\r\n    render(){\r\n        return(<div className=\"divLiveStreamView\">\r\n            \r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./FavoritesView.css\";\r\nimport { VtuberListItem } from \"../\";\r\n\r\nexport default class FavoritesView extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    makeFavoriteList = (favIdArray) => {\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    showFavoritesList = (inputFavorites, inputVtubers) => {\r\n        let favsToReturn = <div></div>;\r\n        if (typeof (favIdArray) === undefined || inputFavorites.length === 0) {\r\n            return favsToReturn;\r\n        }\r\n\r\n        let tempFavList = inputVtubers.filter(vtuber =>(inputFavorites.includes(vtuber.id)));\r\n\r\n        favsToReturn = tempFavList.map(vtuber=>\r\n            <VtuberListItem vtuberDataProp={vtuber}\r\n                    favoriteVtuberProp={this.props.favoriteVtuberProp}\r\n                    isFavoritedProp={inputFavorites.includes(vtuber.id)} \r\n                    key={vtuber.id}/>\r\n        );\r\n        console.log(favsToReturn);\r\n        return favsToReturn;\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"divMainFavoriteView\">{this.showFavoritesList(this.props.favoritesListProp, this.props.vtuberDataProp)}</div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./FilterBox.css\";\r\n\r\n//name, group, subCount, videoCount\r\n\r\n\r\n\r\nexport default class FilterBox extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            amOpen: false,\r\n            filters: [],\r\n            closedFilters: []\r\n        }\r\n\r\n\r\n    }\r\n\r\n    noNumbersRegex = /(\\D)/;\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        try {\r\n            if (prevState.filters !== this.state.filters) {\r\n                console.log(this.state.filters);\r\n                this.props.filterProp(this.state.filters);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    openCloseFilter = () => {\r\n        this.setState({\r\n            amOpen: !this.state.amOpen\r\n        });\r\n    }\r\n\r\n\r\n    addFilter = () => {\r\n        try {\r\n\r\n            let newFilters = this.state.filters;\r\n            if (newFilters.length < 4) {\r\n                newFilters.push({ filterType: \"name\", value: \"\", comparisonOp: \"\", id: Math.floor((Math.random() * 1009)) });\r\n            };\r\n\r\n            this.setState({\r\n                filters: newFilters\r\n            }, () => {\r\n                console.log(this.state.filters);\r\n                this.props.filterProp(this.state.filters);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    removeFilter = (filterToRemove) => {\r\n        try {\r\n            console.log(filterToRemove);\r\n            let newFilters = this.state.filters;\r\n            for (let i = 0; i < newFilters.length; i++) {\r\n                if (newFilters[i].id === filterToRemove) {\r\n                    newFilters.splice(i, 1);\r\n\r\n                }\r\n            };\r\n            this.setState({\r\n                filters: newFilters\r\n            }, () => {\r\n                console.log(this.state.filters);\r\n                this.props.filterProp(this.state.filters);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    changeFilter = (e, id) => {\r\n        try {\r\n            let filters = this.state.filters;\r\n            for (let i = 0; i < filters.length; i++) {\r\n                if (filters[i].id === id) {\r\n                    filters[i].filterType = e.target.value;\r\n                    if (filters[i].filterType !== \"subCount\" && filters[i].filterType !== \"videoCount\") {\r\n                        filters[i].comparisonOp = \"\";\r\n                    };\r\n                    break;\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                filters: filters\r\n            }, () => {\r\n                console.log(this.state.filters);\r\n                this.props.filterProp(this.state.filters);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //TODO\r\n    //invalidate\r\n    changeFilterValue = (e = \"\", id, comparisonOp = \"\") => {\r\n        try {\r\n\r\n            let filters = this.state.filters;\r\n            let f = filters.indexOf(filters.find(f => f.id === id));\r\n\r\n            if (comparisonOp !== \"\") {\r\n\r\n                filters[f].comparisonOp = comparisonOp;\r\n            } else {\r\n                filters[f].value = e;\r\n            }\r\n\r\n            this.setState({\r\n                filters: filters\r\n            }, () => {\r\n                console.log(this.state.filters);\r\n                this.props.filterProp(this.state.filters);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    changeFilterVisual = (filter) => {\r\n        let inputToReturn = <input className=\"inputFilterValue\"\r\n            onChange={(e) => this.changeFilterValue(e.target.value, filter.id)}>\r\n        </input>;\r\n        try {\r\n            switch (filter.filterType) {\r\n                case \"name\":\r\n                    inputToReturn = <input className=\"inputFilterValue\"\r\n                        onChange={(e) => this.changeFilterValue(e.target.value, filter.id)}>\r\n                    </input>;\r\n                    break;\r\n                case \"group\":\r\n                    inputToReturn = <select name=\"groupFilterOptions\"\r\n                        className=\"inputFilterValue\"\r\n                        defaultValue=\"\"\r\n                        onChange={(e) => this.changeFilterValue(e.target.value, filter.id)}>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"hololive\">Hololive</option>\r\n                        <option value=\"nijisanji\">Nijisanji</option>\r\n                        <option value=\"other\">Other</option>\r\n                        <option value=\"independent\">Independent</option>\r\n                    </select>\r\n                    break;\r\n                case \"subCount\":\r\n                case \"videoCount\":\r\n                    inputToReturn = <div className=\"divComparisonInput\" >\r\n                        <select defaultValue=\"\"\r\n                            className=\"inputComparisonOperator\"\r\n                            onChange={(e) => this.changeFilterValue(\"\", filter.id, e.target.value)}>\r\n                            <option value=\"\"></option>\r\n                            <option value=\"<\">{\"<\"}</option>\r\n                            <option value=\">\">{\">\"}</option></select>\r\n                        <input type=\"number\"\r\n                            className=\"inputFilterValue\"\r\n                            pattern=\"\\d\"\r\n                            title=\"Only digits\"\r\n                            onChange={(e) => this.changeFilterValue(e.target.value, filter.id)}>\r\n                        </input>\r\n                    </div>;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return inputToReturn;\r\n    }\r\n\r\n    showFilters = (filters) => {\r\n        let filterBoxes = <div></div>;\r\n        try {\r\n            if (filters.length !== 0) {\r\n                filterBoxes = filters.map(filter => <div className=\"divFilterItem\" key={filter.id}>\r\n                    <label>Filter by:</label>\r\n                    <select name=\"filterOptions\" onChange={(e) => this.changeFilter(e, filter.id)}\r\n                        className=\"selectFilterOptions\"\r\n                        defaultValue=\"name\">\r\n                        <option value=\"name\" >Name</option>\r\n                        <option value=\"group\">Group</option>\r\n                        <option value=\"subCount\">Sub count</option>\r\n                        <option value=\"videoCount\">Video count</option>\r\n                    </select>\r\n                    {this.changeFilterVisual(filter)}\r\n                    <button className=\"btnFilterButtons\" onClick={() => { this.removeFilter(filter.id) }}>x</button>\r\n                </div>)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return filterBoxes;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"divMainFilter\">\r\n                <button className={this.state.amOpen ?\"invisible\":\"btnFilterOpenClose\"} onClick={this.openCloseFilter}>Filter</button>\r\n                <div className={this.state.amOpen ? \"divFilterOpen\" : \"divFilterClosed\"}>\r\n                    <div className=\"divAddFilterHeader\">\r\n                        <label>Add filter</label>\r\n                        <button className=\"btnFilterButtons\" onClick={this.addFilter}>\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                    {this.showFilters(this.state.filters)}\r\n                    <div className=\"divAddFilterFooter\">\r\n                        <label>Close filterbox</label>\r\n                        <button className=\"btnFilterButtons\" onClick={this.openCloseFilter}>\r\n                            x\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./AboutView.css\";\r\n\r\nexport default class AboutView extends React.Component{\r\n\r\n    createUpdatesParagraphs=()=>{\r\n        try {\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(<div className=\"divAboutMain\">\r\n            \r\n\r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./RankingsView.css\";\r\n\r\nexport default class RankingsView extends React.Component{\r\n    \r\n\r\n    render(){\r\n        return(<div></div>)\r\n    }\r\n}","import React from \"react\";\r\nimport { VtuberListItem } from \"../index\";\r\nimport \"./RandomView.css\";\r\n\r\nexport default class RandomView extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            hololive:[],\r\n            nijisanji:[],\r\n            independent:[]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.vtuberDataProp && typeof(this.props.vtuberDataProp)!== undefined) {\r\n            // console.log(this.props.vtuberDataProp);\r\n            this.setRandomCards();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        try {\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getRandomCards = (cardsToGet) => {\r\n        let cardsToReturn = [];\r\n\r\n        try {\r\n            if (typeof (this.props.vtuberDataProp) !== undefined) {\r\n                let cardsToRng = [];\r\n                let rng = [];\r\n                switch (cardsToGet) {\r\n                    case \"hololive\":\r\n                        cardsToRng = this.props.vtuberDataProp.filter(vtuber => vtuber.group === \"hololive\");\r\n\r\n                        break;\r\n                    case \"nijisanji\":\r\n                        cardsToRng = this.props.vtuberDataProp.filter(vtuber => vtuber.group === \"nijisanji\");\r\n\r\n                        break;\r\n                    case \"independent\":\r\n                        cardsToRng = this.props.vtuberDataProp.filter(vtuber => vtuber.group !== \"nijisanji\" && vtuber.group !== \"hololive\");\r\n\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n\r\n                while (rng.length < 5) {\r\n                    let rnum = this.getRandomNumber(0, cardsToRng.length - 1);\r\n                    if (!rng.includes(rnum)) {\r\n                        rng.push(rnum);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (rng.length > 0) {\r\n\r\n                    cardsToReturn = rng.map(rnum => cardsToRng[rnum]);\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return cardsToReturn;\r\n    }\r\n\r\n    setRandomCards =()=>{\r\n        try {\r\n\r\n            let types= [\"hololive\",\"nijisanji\",\"independent\"];\r\n            let cardArrays = [[],[],[]];\r\n\r\n            for(let i = 0;i<types.length;i++){\r\n                cardArrays[i] = this.getRandomCards(types[i]);\r\n            }\r\n\r\n            this.setState({\r\n                hololive:cardArrays[0],\r\n                nijisanji:cardArrays[1],\r\n                independent:cardArrays[2]\r\n            });\r\n\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getRandomNumber = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    showCards = (cardsToShow) => {\r\n        let listToReturn = <div></div>;\r\n        const favArray = this.props.favoritesListProp;\r\n        try {\r\n            listToReturn = cardsToShow.map(vtuber =>\r\n                <VtuberListItem vtuberDataProp={vtuber}\r\n                    favoriteVtuberProp={this.props.favoriteVtuberProp}\r\n                    isFavoritedProp={favArray.includes(vtuber.id)} \r\n                    key={vtuber.id}/>\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return listToReturn;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<div className=\"divMainRandomView\">\r\n            <div className=\"btnContainer\">\r\n                <button className=\"buttonRandomize\" onClick={this.setRandomCards}>\r\n                    Random\r\n                </button>\r\n            </div>\r\n            <div className=\"divGroupBar\">\r\n                <div>\r\n                    <span>Hololive</span>\r\n                </div>\r\n                <div className=\"divGroupCardBar\">\r\n                    {this.showCards(this.state.hololive)}\r\n                </div>\r\n            </div>\r\n            <div className=\"divGroupBar\">\r\n                <div>\r\n                    <span>Nijisanji</span>\r\n                </div>\r\n                <div className=\"divGroupCardBar\">\r\n                    {this.showCards(this.state.nijisanji)}\r\n                </div>\r\n            </div>\r\n            <div className=\"divGroupBar\">\r\n                <div>\r\n                    <span>Independent</span>\r\n                </div>\r\n                <div className=\"divGroupCardBar\">\r\n                    {this.showCards(this.state.independent)}\r\n                </div>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n                <button className=\"buttonRandomize\" onClick={this.setRandomCards}>\r\n                    Random\r\n                </button>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Header, Nav, VtuberList, Footer, LiveStreamsView, RandomView, FavoritesView, AboutView } from \"./components\";\r\n\r\nconst storage = require(\"./logic/storage\");\r\nconst filter = require(\"./logic/filter\");\r\nconst tempVtuberCollection = require(\"./vtubersCollection.json\");\r\n\r\n\r\n// const languages = [\"en\", \"jp\", \"de\", \"ch\"];\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    vtubers: [],\r\n    currentlyShownVtubers: [],\r\n    favoriteVtubers: [],\r\n    currentView: \"home\",\r\n    language: \"en\"\r\n  };\r\n  componentDidMount() {\r\n    this.onMountSetup();\r\n\r\n  }\r\n\r\n  // componentDidUpdate = (prevProps, prevState) => {\r\n  //   try {\r\n\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n\r\n  onMountSetup = () => {\r\n\r\n    const favorites = storage.getFavoritesList();\r\n\r\n    this.setState({\r\n      vtubers: tempVtuberCollection,\r\n      currentlyShownVtubers:tempVtuberCollection,\r\n      favoriteVtubers: favorites\r\n    });\r\n  }\r\n\r\n  selectView = (newView) => {\r\n    try {\r\n      this.setState({\r\n        currentView: newView\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // selectLanguage = (language) => {\r\n  //   try {\r\n  //     console.log(language);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n  favoriteVtuber = (vtuberId, isFavorited) => {\r\n    try {\r\n      if (isFavorited) {\r\n        storage.addFavorite(vtuberId);\r\n      } else {\r\n        storage.removeFavorite(vtuberId);\r\n      }\r\n      const favorites = storage.getFavoritesList();\r\n      if (favorites !== null) {\r\n        this.setState({\r\n          favoriteVtubers: favorites\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //TODO\r\n  //stop the infinite loops\r\n  filterVtuberList=(filterObj)=>{\r\n    try {\r\n\r\n      if(filterObj.length>0){\r\n        let tempArr = filter.filterArray(this.state.vtubers,filterObj);\r\n\r\n        if(tempArr.length!==0){\r\n          this.setState({\r\n            currentlyShownVtubers:tempArr\r\n          });\r\n        }\r\n      }else{\r\n        this.setState({\r\n          currentlyShownVtubers:this.state.vtubers\r\n        });\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  showView = (currentView) => {\r\n    let viewToReturn = <div></div>;\r\n    try {\r\n      switch (currentView) {\r\n        case \"home\":\r\n          viewToReturn = <div className=\"divContentBoxForFlex\"><VtuberList vtuberDataProp={this.state.currentlyShownVtubers}\r\n            favoriteVtuberProp={this.favoriteVtuber}\r\n            favoritesListProp={this.state.favoriteVtubers}\r\n            filterVtuberProp={this.filterVtuberList} /></div>;\r\n          break;\r\n        case \"random\":\r\n          viewToReturn = <div className=\"divContentBoxForFlex\"><RandomView vtuberDataProp={this.state.vtubers}\r\n            favoriteVtuberProp={this.favoriteVtuber}\r\n            favoritesListProp={this.state.favoriteVtubers} /></div>;\r\n          break;\r\n        case \"currentlyLive\":\r\n          viewToReturn = <div className=\"divContentBoxForFlex\"><LiveStreamsView favoritesListProp={this.state.favoriteVtubers} /></div>;\r\n          break;\r\n        case \"favorites\":\r\n          viewToReturn = <div className=\"divContentBoxForFlex\"><FavoritesView favoriteVtuberProp={this.favoriteVtuber}\r\n            vtuberDataProp={this.state.vtubers}\r\n            favoritesListProp={this.state.favoriteVtubers} /></div>;\r\n          break;\r\n        // case \"about\":\r\n        //   viewToReturn = <div className=\"divContentBoxForFlex\"><AboutView /></div>;\r\n        //   break;\r\n        default:\r\n          viewToReturn = <div className=\"divContentBoxForFlex\"><VtuberList vtuberDataProp={this.state.vtubers}\r\n            favoriteVtuberProp={this.favoriteVtuber} /></div>;\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    return viewToReturn;\r\n  }\r\n\r\n  render() {\r\n    const { currentView } = this.state;\r\n    return (\r\n      <div id=\"pageContainer\">\r\n        <header className=\"headerMain\">\r\n          <Header />\r\n        </header>\r\n        <div className=\"divPageContent\">\r\n          <div className=\"navbarContainer\">\r\n            <Nav selectViewProp={this.selectView} selectLangProp={this.selectLanguage}/>\r\n          </div>\r\n          {this.showView(currentView)}\r\n        </div>\r\n        <footer className=\"footerMain\">\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}